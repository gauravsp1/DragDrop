{"version":3,"sources":["DragDrop.js","App.js","index.js"],"names":["DragDrop","props","useState","data","setData","dragging","setDragging","dragItem","useRef","dragItemNode","handleDragEnd","current","removeEventListener","handleDragEnter","e","targetItem","target","console","log","itemId","prev","newList","groupId","items","splice","getEffect","item","className","map","group","onDragEnter","length","title","draggable","onDragStart","addEventListener","setTimeout","handletDragStart","App","ReactDOM","render","document","getElementById"],"mappings":"4JA2EeA,MAzEf,SAAkBC,GAAO,IAAD,EAEIC,mBAASD,EAAME,MAFnB,mBAEbA,EAFa,KAEPC,EAFO,OAGYF,oBAAS,GAHrB,mBAGbG,EAHa,KAGHC,EAHG,KAKdC,EAAWC,mBACXC,EAAeD,mBAcrB,SAASE,IACLJ,GAAY,GACZC,EAASI,QAAU,KACnBF,EAAaE,QAAQC,oBAAoB,UAAWF,GACpDD,EAAaE,QAAU,KAG3B,SAASE,EAAgBC,EAAGC,GAEpBN,EAAaE,UAAYG,EAAEE,SAC7BC,QAAQC,IAAIH,EAAWI,QACrBf,GAAQ,SAACgB,GACL,IAAIC,EAAO,YAAOD,GAGlB,OAFDC,EAAQN,EAAWO,SAASC,MAAMC,OAAOT,EAAWI,OAAQ,EAAGE,EAAQd,EAASI,QAAQW,SAASC,MAAMC,OAAOjB,EAASI,QAAQQ,OAAO,IACrIZ,EAASI,QAAUI,EACZM,MAQnB,SAASI,EAAUC,GACf,OAAInB,EAASI,QAAQW,UAAYI,EAAKJ,SAAWf,EAASI,QAAQQ,SAAWO,EAAKP,OACvE,mBAEJ,WAKX,OAAO,qBAAKQ,UAAU,WAAf,SACNxB,EAAKyB,KAAI,SAACC,EAAMP,GACf,OAAO,sBACPQ,YAAazB,IAAawB,EAAMN,MAAMQ,OAAO,SAACjB,GAAD,OAAOD,EAAgBC,EAAE,CAACQ,UAASH,OAAQ,KAAI,KAC5FQ,UAAU,YAFH,UAGN,qBAAKA,UAAU,kBAAf,SACCE,EAAMG,QAGLH,EAAMN,MAAMK,KAAI,SAACF,EAAKP,GACrB,OAAO,qBAAKc,WAAS,EAACC,YAAa,SAACpB,GAAD,OAtDxC,SAA0BA,EAAGY,GAG1BjB,EAAaE,QAAUG,EAAEE,OACzBP,EAAaE,QAAQwB,iBAAiB,UAAWzB,GACjDH,EAASI,QAAUe,EAEnBU,YAAW,WACP9B,GAAY,KACd,GA6C0C+B,CAAiBvB,EAAG,CAACQ,UAASH,YACxEW,YAAazB,EAAS,SAACS,GAAOD,EAAgBC,EAAG,CAACQ,UAASH,YAAU,KACnEQ,UAAWtB,EAASoB,EAAU,CAACH,UAASH,WAAS,WAF5C,SAGJO,gBClDEY,MAdf,WAKE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,CAAUxB,KALD,CAAC,CAAE6B,MAAO,OAAQT,MAAO,CAAC,kDAAmD,UAAW,eAAe,gBACpH,CAAES,MAAO,QAAST,MAAO,CAAC,gBAAiB,OAAQ,aACnD,CAAES,MAAO,OAAQT,MAAO,CAAC,mBCJ3BgB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6cbe8fe0.chunk.js","sourcesContent":["import React, {useState, useRef } from \"react\";\r\n\r\nfunction DragDrop(props){\r\n\r\n    const [data, setData] = useState(props.data); \r\n    const [dragging, setDragging] = useState(false);\r\n\r\n    const dragItem = useRef();\r\n    const dragItemNode = useRef();\r\n\r\n     function handletDragStart(e, item){\r\n         \r\n\r\n        dragItemNode.current = e.target;\r\n        dragItemNode.current.addEventListener('dragend', handleDragEnd)\r\n        dragItem.current = item;\r\n\r\n        setTimeout(() => {\r\n            setDragging(true); \r\n        },0)       \r\n    }\r\n\r\n    function handleDragEnd(){\r\n        setDragging(false);\r\n        dragItem.current = null;\r\n        dragItemNode.current.removeEventListener('dragend', handleDragEnd)\r\n        dragItemNode.current = null;\r\n    }\r\n    \r\n    function handleDragEnter(e, targetItem){\r\n        \r\n        if (dragItemNode.current !== e.target) {\r\n          console.log(targetItem.itemId);\r\n            setData((prev) => {\r\n                let newList = [...prev]\r\n               newList[targetItem.groupId].items.splice(targetItem.itemId, 0, newList[dragItem.current.groupId].items.splice(dragItem.current.itemId,1))\r\n                dragItem.current = targetItem;\r\n                return newList\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    function getEffect(item){\r\n        if (dragItem.current.groupId === item.groupId && dragItem.current.itemId === item.itemId) {\r\n            return \"dnd_item current\"\r\n        }\r\n        return \"dnd_item\"\r\n    }\r\n\r\n\r\n\r\n    return <div className=\"dragdrop\">\r\n    {data.map((group,groupId)=>{\r\n      return <div \r\n      onDragEnter={dragging && !group.items.length?(e) => handleDragEnter(e,{groupId, itemId: 0}):null}\r\n      className=\"dnd_group\">\r\n       <div className=\"dnd_group_title\">\r\n       {group.title}\r\n       </div>\r\n        \r\n        {group.items.map((item,itemId)=>{\r\n          return <div draggable onDragStart={(e) => handletDragStart(e, {groupId, itemId})} \r\n          onDragEnter={dragging?(e) => {handleDragEnter(e, {groupId, itemId})}:null}\r\n            className={dragging?getEffect({groupId, itemId}):\"dnd_item\"}>\r\n            {item}\r\n          </div>\r\n        })}\r\n      </div>\r\n    })}\r\n  </div>\r\n}\r\n\r\nexport default DragDrop","import DragDrop from \"./DragDrop\"\n\n\nfunction App() {\n\n  const data = [{ title: \"Task\", items: [\"Buy Books Online Now...........................\", \"Grocery\", \"Iron Clothes\",\"Check Mails\"] },\n  { title: \"To-Do\", items: [\"Daily Reading\", \"Walk\", \"Wash Car\"] },\n  { title: \"Done\", items: [\"Meditate\"] }]\n  return (\n    <div className=\"App\">\n      <DragDrop data={data}/>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}